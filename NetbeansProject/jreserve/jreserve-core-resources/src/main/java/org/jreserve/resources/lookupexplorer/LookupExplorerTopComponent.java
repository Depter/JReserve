package org.jreserve.resources.lookupexplorer;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.nodes.AbstractNode;
import org.openide.util.Lookup.Result;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//org.jreserve.resources.lookupexplorer//LookupExplorer//EN",
    autostore = false
)
@TopComponent.Description(
    preferredID = "LookupExplorerTopComponent",
    persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(
    mode = "rightSlidingSide", 
    openAtStartup = true
)
@ActionID(
    category = "Window", 
    id = "org.jreserve.resources.lookupexplorer.LookupExplorerTopComponent"
)
@ActionReference(
    path = "Menu/Window", 
    position = 991
)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_LookupExplorerAction",
    preferredID = "LookupExplorerTopComponent"
)
@Messages({
    "CTL_LookupExplorerAction=Lookup Explorer",
    "CTL_LookupExplorerTopComponent=Lookup Explorer"
})
public final class LookupExplorerTopComponent extends TopComponent implements ExplorerManager.Provider, LookupListener {

    private final ExplorerManager em = new ExplorerManager();
    private Result<Object> result;
    private boolean active = false;
    
    public LookupExplorerTopComponent() {
        initComponents();
        setName(Bundle.CTL_LookupExplorerTopComponent());
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }

    @Override
    public void resultChanged(LookupEvent le) {
        if(active)
            return;
        LookupChildFactory children = new LookupChildFactory(result.allInstances());
        AbstractNode root = new AbstractNode(children);
        em.setRootContext(root);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list = new org.openide.explorer.view.ListView();

        setLayout(new java.awt.BorderLayout());
        add(list, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.view.ListView list;
    // End of variables declaration//GEN-END:variables
    
    @Override 
    public void componentOpened() {
        result = Utilities.actionsGlobalContext().lookupResult(Object.class);
        result.addLookupListener(this);
        resultChanged(null);
    }
    
    @Override 
    public void componentClosed() {
        result.removeLookupListener(this);
        result = null;
    }

    void writeProperties(java.util.Properties p) {
    }

    void readProperties(java.util.Properties p) {
    }

    @Override
    protected void componentActivated() {
        active = true;
    }

    @Override
    protected void componentDeactivated() {
        active = false;
    }
}
