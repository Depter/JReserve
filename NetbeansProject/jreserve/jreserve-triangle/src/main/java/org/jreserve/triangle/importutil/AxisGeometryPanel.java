package org.jreserve.triangle.importutil;

import java.util.Date;
import javax.swing.JTextField;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.jreserve.resources.textfieldfilters.IntegerFilter;
import org.openide.util.NbBundle.Messages;

/**
 *
 * @author Peter Decsi
 */
@Messages({
    "LBL.AxisGeometryPanel.Begin=Begin:",
    "LBL.AxisGeometryPanel.Periods=Periods:",
    "LBL.AxisGeometryPanel.Steps=Months per step:"
})
public class AxisGeometryPanel extends javax.swing.JPanel implements DocumentListener, ChangeListener {
    
    public final static String PROPERTY_FROM = "FROM DATE";
    public final static String PROPERTY_PERIODS = "PERIODS";
    public final static String PROPERTY_MONTHS = "MONTHS";

    private final static String DEFAULT_PERIODS = "1";
    private final static String DEFAULT_STEPS = "12";

    public AxisGeometryPanel() {
        initComponents();
    }
    
    @Override
    public void setEnabled(boolean enabled) {
        fromSpinner.setEnabled(enabled);
        periodsText.setEnabled(enabled);
        stepText.setEnabled(enabled);
    }
    
    public void setFromDateEnabled(boolean enabled) {
        fromSpinner.setEnabled(enabled);
    }
    
    public Date getFromDate() {
        return fromSpinner.getDate();
    }
    
    public String getFromDateAsString() {
        return fromSpinner.getText();
    }
    
    public void setFromDate(Date date) {
        fromSpinner.setValue(date);
    }
    
    public void setPeriodsEnabled(boolean enabled) {
        periodsText.setEnabled(enabled);
    }
    
    public int getPeriods() {
        return getIntFromField(periodsText);
    }
    
    public void setPeriods(int periods) {
        periodsText.setText(Integer.toString(periods));
    }
    
    private int getIntFromField(JTextField textField) {
        String str = textField.getText();
        if(str == null || str.trim().length()==0)
            return 0;
        return Integer.parseInt(str);
    }
    
    public void setMonthsEnabled(boolean enabled) {
        stepText.setEnabled(enabled);
    }
    
    public int getMonthPerStep() {
        return getIntFromField(stepText);
    }
    
    public void setMonthPerStep(int months) {
        stepText.setText(Integer.toString(months));
    }
    
    @Override
    public void insertUpdate(DocumentEvent e) {
        textFieldChanged(e);
    }
    
    private void textFieldChanged(DocumentEvent evt) {
        JTextField field = getSource(evt);
        if(periodsText == field) {
            setProperty(PROPERTY_PERIODS, field.getText());
        } else {
            setProperty(PROPERTY_MONTHS, field.getText());
        }
    }
    
    private JTextField getSource(DocumentEvent evt) {
        if(periodsText.getDocument() == evt.getDocument())
            return periodsText;
        return stepText;
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        textFieldChanged(e);
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
    }

    @Override
    public void stateChanged(ChangeEvent e) {
        setProperty(PROPERTY_FROM, fromSpinner.getValue());
    }
    
    private void setProperty(String name, Object value) {
        putClientProperty(name, value);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fromLabel = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        stepLabel = new javax.swing.JLabel();
        fromSpinner = new org.jreserve.resources.textfieldfilters.DateSpinner();
        periodsText = new javax.swing.JTextField();
        stepText = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        setLayout(new java.awt.GridBagLayout());

        fromLabel.setText(Bundle.LBL_AxisGeometryPanel_Begin());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(fromLabel, gridBagConstraints);

        toLabel.setText(Bundle.LBL_AxisGeometryPanel_Periods());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(toLabel, gridBagConstraints);

        stepLabel.setText(Bundle.LBL_AxisGeometryPanel_Steps());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(stepLabel, gridBagConstraints);

        fromSpinner.addChangeListener(this);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        add(fromSpinner, gridBagConstraints);

        periodsText.setText(DEFAULT_PERIODS);
        periodsText.getDocument().addDocumentListener(this);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        add(periodsText, gridBagConstraints);

        stepText.setDocument(new IntegerFilter());
        stepText.getDocument().addDocumentListener(this);
        stepText.setText(DEFAULT_STEPS);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.weightx = 1.0;
        add(stepText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(filler1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel fromLabel;
    private org.jreserve.resources.textfieldfilters.DateSpinner fromSpinner;
    private javax.swing.JTextField periodsText;
    private javax.swing.JLabel stepLabel;
    private javax.swing.JTextField stepText;
    private javax.swing.JLabel toLabel;
    // End of variables declaration//GEN-END:variables
}
