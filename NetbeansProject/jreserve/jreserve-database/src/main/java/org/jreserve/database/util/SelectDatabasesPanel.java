/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jreserve.database.util;

import java.awt.event.MouseListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.ListView;
import org.openide.nodes.AbstractNode;
import org.openide.util.NbBundle.Messages;

/**
 *
 * @author Peti
 */
@Messages({
    "CTL_databaseName=Name:"
})
class SelectDatabasesPanel extends javax.swing.JPanel implements ExplorerManager.Provider, DocumentListener {

    private final ExplorerManager em = new ExplorerManager();
    private DatabaseChildren children;
    
    /**
     * Creates new form OpendatabasesPanel
     */
    SelectDatabasesPanel(DatabaseChildren children, SelectDatabaseDialog.SelectionMode selectionMode) {
        initComponents();
        listView1.setSelectionMode(selectionMode.getSwingValue());
        this.children = children;
        em.setRootContext(new AbstractNode(children));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filterLabel = new javax.swing.JLabel();
        filterText = new javax.swing.JTextField();
        listView1 = new MouseEanbledList();

        filterLabel.setText(Bundle.CTL_databaseName());

        filterText.setText(org.openide.util.NbBundle.getMessage(SelectDatabasesPanel.class, "SelectDatabasesPanel.filterText.text")); // NOI18N
        filterText.getDocument().addDocumentListener(this);

        listView1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filterLabel)
                        .addGap(18, 18, 18)
                        .addComponent(filterText))
                    .addComponent(listView1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterLabel)
                    .addComponent(filterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(listView1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel filterLabel;
    private javax.swing.JTextField filterText;
    private org.openide.explorer.view.ListView listView1;
    // End of variables declaration//GEN-END:variables

    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }

    @Override
    public void insertUpdate(DocumentEvent e) {
        filter();
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        filter();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        filter();
    }
    
    private void filter() {
        String filter = escapeFilterText(filterText.getText());
        children.setNameFilter(filter);
    }
    
    private String escapeFilterText(String filter) {
        if(filter == null)
            return null;
        filter = filter.trim();
        return filter.length()==0? null : filter;
    }
    
    void addDblClickListener(MouseListener listener) {
        ((MouseEanbledList) listView1).addMouseListenerToList(listener);
    }
    
    private class MouseEanbledList extends ListView {
        
        void addMouseListenerToList(MouseListener listener) {
            list.addMouseListener(listener);
        }
    }
}
