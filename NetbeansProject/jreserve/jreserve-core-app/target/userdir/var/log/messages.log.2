-------------------------------------------------------------------------------
>Log Session: Monday, January 21, 2013 4:56:16 PM CET
>System Info: 
  Product Version         = JReserve 201207171143
  Operating System        = Windows XP version 5.1 running on x86
  Java; VM; Vendor        = 1.6.0_17; Java HotSpot(TM) Server VM 14.3-b01; Sun Microsystems Inc.
  Runtime                 = Java(TM) SE Runtime Environment 1.6.0_17-b04
  Java Home               = D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre
  System Locale; Encoding = nl_NL (jreserve); Cp1252
  Home Directory          = C:\Documents and Settings\aa461472
  Current Directory       = D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve
  User Directory          = D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\userdir
  Cache Directory         = D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\userdir\var\cache
  Installation            = D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\bin
                            D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\etc
                            D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\jreserve
                            D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform
                            D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform
  Boot & Ext. Classpath   = D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\resources.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\rt.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\sunrsasign.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\jsse.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\jce.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\charsets.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\classes;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\ext\dnsns.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\ext\j3dcore.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\ext\j3dutils.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\ext\localedata.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\ext\sunjce_provider.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\ext\sunmscapi.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\ext\sunpkcs11.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\jre\lib\ext\vecmath.jar
  Application Classpath   = D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\boot.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\org-openide-modules.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\org-openide-util-lookup.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\org-openide-util.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\boot_ja.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\boot_pt_BR.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\boot_ru.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\boot_zh_CN.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-modules_ja.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-modules_pt_BR.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-modules_ru.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-modules_zh_CN.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-util-lookup_ja.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-util-lookup_pt_BR.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-util-lookup_ru.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-util-lookup_zh_CN.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-util_ja.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-util_pt_BR.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-util_ru.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\lib\locale\org-openide-util_zh_CN.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\lib\dt.jar;D:\Eigen\Programs\JAVA\jdk1.6.0_17\lib\tools.jar
  Startup Classpath       = D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\core\core.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\core\org-openide-filesystems.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\core\locale\core_ja.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\core\locale\core_pt_BR.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\core\locale\core_ru.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\core\locale\core_zh_CN.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\core\locale\org-openide-filesystems_ja.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\core\locale\org-openide-filesystems_pt_BR.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\core\locale\org-openide-filesystems_ru.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\platform\core\locale\org-openide-filesystems_zh_CN.jar;D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\jreserve\core\locale\core_jreserve.jar
-------------------------------------------------------------------------------
WARNING [org.netbeans.core.projects.cache]: Inefficient to include an empty layer in a module: jar:file:/D:/Eigen/GitRepos/JReserve/NetbeansProject/jreserve/jreserve-core-app/target/jreserve/jreserve/modules/org-jreserve-jreserve-data-project.jar!/org/jreserve/project/layer.xml
WARNING [org.netbeans.core.projects.cache]: Inefficient to include an empty layer in a module: jar:file:/D:/Eigen/GitRepos/JReserve/NetbeansProject/jreserve/jreserve-core-app/target/jreserve/jreserve/modules/org-jreserve-jreserve-data-data.jar!/org/jreserve/data/layer.xml
WARNING [org.netbeans.core.projects.cache]: Inefficient to include an empty layer in a module: jar:file:/D:/Eigen/GitRepos/JReserve/NetbeansProject/jreserve/jreserve-core-app/target/jreserve/jreserve/modules/org-jreserve-jreserve-triangle-correction.jar!/org/jreserve/triangle/correction/layer.xml
WARNING [org.openide.filesystems.Ordering]: Not all children in Services/MIMEResolver/ marked with the position attribute: [org-jreserve-persistence-connection-EntityFactory-Registration.xml, org-jreserve-database-AbstractDatabase-Registration.xml], but some are: [org-openide-loaders-DataLoaderPool$InstanceLoaderSystem-Extension.xml, org-netbeans-core-startup-layers-SystemFileSystem-Extension.xml]
WARNING [org.openide.filesystems.Ordering]: Not all children in Services/MIMEResolver/ marked with the position attribute: [org-jreserve-database-AbstractDatabase-Registration.xml, org-jreserve-persistence-connection-EntityFactory-Registration.xml], but some are: [org-openide-loaders-DataLoaderPool$InstanceLoaderSystem-Extension.xml, org-netbeans-core-startup-layers-SystemFileSystem-Extension.xml]
WARNING [org.netbeans.core.startup.InstalledFileLocatorImpl]: no such module D:\Eigen\GitRepos\JReserve\NetbeansProject\jreserve\jreserve-core-app\target\jreserve\jreserve\update_tracking\org-jreserve-logging.xml at org.jreserve.logging.LoggerProperties.getConfigRoot(LoggerProperties.java:57)
WARNING [org.jreserve.logging.LoggingSetting]: Logger level: "org.netbeans" => WARNING
WARNING [org.jreserve.logging.LoggingSetting]: Logger level: "" => SEVERE
WARNING [org.jreserve.logging.LoggingSetting]: Logger level: "org.hibernate.SQL" => FINE
INFO [org.jreserve.database.DatabaseUtil]: Loading databases...
INFO [org.jreserve.database.DatabaseUtil]: Database home directory set to "Databases".
INFO [org.jreserve.database.DatabaseUtil]: Loading database file "Databases/Db1.database".
INFO [org.jreserve.database.explorer.ProviderRootChildren]: Loading database providers...
INFO [org.jreserve.database.explorer.ProviderRootChildren]: DatabseProvider found: "Derby"
INFO [org.jreserve.database.explorer.ProviderRootChildren]: DatabseProvider found: "Oracle"
INFO [org.jreserve.persistence.connection.HibernateUtil]: Logging into database "Db1".
INFO [org.jreserve.persistence.connection.LoginDialog]: Checking connection to "jdbc:derby:C:\Documents and Settings\aa461472\Desktop\Db1" with driver "org.apache.derby.jdbc.EmbeddedDriver".
FINE [org.jreserve.persistence.connection.ProxyDriver]: Deregistering driver: "sun.jdbc.odbc.JdbcOdbcDriver@2bd615"
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.connection.driver_class => org.jreserve.persistence.connection.ProxyDriver
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.c3p0.min_size => 5
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.c3p0.max_size => 5
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.c3p0.timeout => 1800
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.c3p0.max_statements => 50
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.connection.provider_class => org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.cache.provider_configuration_file_resource_path => org.hibernate.cache.internal.NoCacheProvider
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.current_session_context_class => thread
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.show_sql => false
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.hbm2ddl.auto => update
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: org.hibernate.envers.store_data_at_delete => true
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-project-entities-Project.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-triangle-smoothing-exponential-ExponentialSmoothing.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-persistence-AbstractPersistentObject.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-triangle-smoothing-arithmetic-entities-ArithmeticSmoothing.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-triangle-correction-entities-TriangleCorrection.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-triangle-smoothing-Smoothing.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-project-entities-LoB.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-triangle-smoothing-geometric-entities-GeometricSmoothing.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-data-entities-ClaimValue.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-estimate-expectedratio-ExpectedRatioEstimate.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-triangle-entities-TriangleModification.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-triangle-entities-TriangleComment.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-data-entities-DataLog.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-triangle-entities-Triangle.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-audit-JReserveRevisionEntity.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-project-entities-ClaimType.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-triangle-smoothing-SmoothingCell.entity".
FINE [org.jreserve.persistence.connection.EntityFactory]: Processing entity file "JReserve/Entities/org-jreserve-data-ProjectDataType.entity".
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.triangle.smoothing.geometric.entities.GeometricSmoothing" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.triangle.smoothing.Smoothing" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.estimate.expectedratio.ExpectedRatioEstimate" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.project.entities.Project" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.persistence.AbstractPersistentObject" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.triangle.entities.TriangleComment" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.data.entities.DataLog" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.data.ProjectDataType" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.triangle.correction.entities.TriangleCorrection" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.audit.JReserveRevisionEntity" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.triangle.smoothing.arithmetic.entities.ArithmeticSmoothing" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.triangle.entities.Triangle" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.data.entities.ClaimValue" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.project.entities.LoB" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.triangle.entities.TriangleModification" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.triangle.smoothing.SmoothingCell" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.project.entities.ClaimType" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Entity class "org.jreserve.triangle.smoothing.exponential.ExponentialSmoothing" added to configuration!
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.connection.url => jdbc:derby:C:\Documents and Settings\aa461472\Desktop\Db1
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.connection.username => null
FINE [org.jreserve.persistence.connection.SessionFactoryBuilder]: Hibernate property set: hibernate.connection.password => ****
FINE [org.jreserve.persistence.connection.HibernateUtil]: SessionFactory initialized.
INFO [org.jreserve.persistence.connection.HibernateUtil]: Database "Db1" is marked as used.
FINE [org.jreserve.project.system.util.FactoryUtil]: Loading ProjectElementFactories from "JReserve/Project/ElementFactories"...
FINE [org.jreserve.project.system.util.FactoryUtil]: Loaded ProjectElementFactory: org.jreserve.project.entities.claimtype.ClaimTypeLoader
FINE [org.jreserve.project.system.util.FactoryUtil]: Loaded ProjectElementFactory: org.jreserve.project.entities.lob.LoBLoader
FINE [org.jreserve.project.system.util.FactoryUtil]: Loaded ProjectElementFactory: org.jreserve.project.entities.project.ProjectLoader
FINE [org.jreserve.project.system.util.FactoryUtil]: Loaded ProjectElementFactory: org.jreserve.data.projectdatatype.ProjectDataTypeLoader
FINE [org.jreserve.project.system.util.FactoryUtil]: Loaded ProjectElementFactory: org.jreserve.triangle.project.TriangleLoader
FINE [org.jreserve.project.system.util.FactoryUtil]: Loaded ProjectElementFactory: org.jreserve.triangle.project.ProjectDataContainerLoader
FINE [org.jreserve.project.system.util.FactoryUtil]: Loaded ProjectElementFactory: org.jreserve.estimate.core.container.EstimateContainerLoader
DEBUG [org.hibernate.SQL]: select lob0_.ID as ID3_, lob0_.VERSION as VERSION3_, lob0_.LOB_NAME as LOB1_14_ from JRESERVE.LOB lob0_
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: LoB [Motor]
DEBUG [org.hibernate.SQL]: select claimtypes0_.LOB_ID as LOB2_3_1_, claimtypes0_.ID as ID1_, claimtypes0_.ID as ID3_0_, claimtypes0_.VERSION as VERSION3_0_, claimtypes0_.LOB_ID as LOB2_16_0_, claimtypes0_.CLAIM_TYPE_NAME as CLAIM1_16_0_ from JRESERVE.CLAIM_TYPE claimtypes0_ where claimtypes0_.LOB_ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ClaimType [BI]
DEBUG [org.hibernate.SQL]: select projects0_.CLAIM_TYPE_ID as CLAIM3_3_1_, projects0_.ID as ID1_, projects0_.ID as ID3_0_, projects0_.VERSION as VERSION3_0_, projects0_.CLAIM_TYPE_ID as CLAIM3_5_0_, projects0_.PROJECT_DESCRIPTION as PROJECT1_5_0_, projects0_.PROJECT_NAME as PROJECT2_5_0_ from JRESERVE.PROJECT projects0_ where projects0_.CLAIM_TYPE_ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: Project [Base]
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectElementContainer [Data]
DEBUG [org.hibernate.SQL]: select triangle0_.ID as ID3_, triangle0_.VERSION as VERSION3_, triangle0_.DATA_TYPE_ID as DATA9_12_, triangle0_.DESCRIPTION as DESCRIPT1_12_, triangle0_.MONTH_IN_ACCIDENT as MONTH2_12_, triangle0_.ACCIDENT_PERIODS as ACCIDENT3_12_, triangle0_.MONTH_IN_DEVELOPMENT as MONTH4_12_, triangle0_.DEVELOPMENT_PERIODS as DEVELOPM5_12_, triangle0_.START_DATE as START6_12_, triangle0_.IS_TRIANGLE as IS7_12_, triangle0_.NAME as NAME12_, triangle0_.PROJECT_ID as PROJECT10_12_ from JRESERVE.TRIANGLE triangle0_ where triangle0_.PROJECT_ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: Vector [Burning cost]
DEBUG [org.hibernate.SQL]: select modificati0_.TRIANGLE_ID as TRIANGLE1_3_1_, modificati0_.MODIFICATION_ID as MODIFICA2_1_, trianglemo1_.ID as ID0_0_, trianglemo1_.SMOOTH_ORDER as SMOOTH2_0_0_, trianglemo1_.VERSION as VERSION0_0_, trianglemo1_1_.SMOOTHING_NAME as SMOOTHING1_1_0_, trianglemo1_3_.ACCIDENT_PERIOD as ACCIDENT1_9_0_, trianglemo1_3_.DEVELOPMENT_PERIOD as DEVELOPM2_9_0_, trianglemo1_3_.CORRIGATED_VALUE as CORRIGATED3_9_0_, trianglemo1_3_.MODIFICATION_ORDER as MODIFICA4_9_0_, trianglemo1_5_.ALPHA as ALPHA17_0_, case when trianglemo1_2_.ID is not null then 2 when trianglemo1_4_.ID is not null then 4 when trianglemo1_5_.ID is not null then 5 when trianglemo1_1_.ID is not null then 1 when trianglemo1_3_.ID is not null then 3 when trianglemo1_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK modificati0_ inner join JRESERVE.TRIANGLE_MODIFICATION trianglemo1_ on modificati0_.MODIFICATION_ID=trianglemo1_.ID left outer join JRESERVE.SMOOTHING trianglemo1_1_ on trianglemo1_.ID=trianglemo1_1_.ID left outer join JRESERVE.GEOMETRIC_SMOOTHING trianglemo1_2_ on trianglemo1_.ID=trianglemo1_2_.ID left outer join JRESERVE.TRIANGLE_CORRECTION trianglemo1_3_ on trianglemo1_.ID=trianglemo1_3_.ID left outer join JRESERVE.ARITHMETIC_SMOOTHING trianglemo1_4_ on trianglemo1_.ID=trianglemo1_4_.ID left outer join JRESERVE.EXPONENTIAL_SMOOTHING trianglemo1_5_ on trianglemo1_.ID=trianglemo1_5_.ID where modificati0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select comments0_.TRIANGLE_ID as TRIANGLE1_3_1_, comments0_.COMMENT_ID as COMMENT2_1_, triangleco1_.ID as ID3_0_, triangleco1_.VERSION as VERSION3_0_, triangleco1_.ACCIDENT_PERIOD as ACCIDENT1_6_0_, triangleco1_.DEVELOPMENT_PERIOD as DEVELOPM2_6_0_, triangleco1_.COMMANT_TEXT as COMMANT3_6_0_, triangleco1_.CREATION_DATE as CREATION4_6_0_, triangleco1_.USER_NAME as USER5_6_0_ from JRESERVE.TRIANGLE_COMMENT_LINK comments0_ inner join JRESERVE.TRIANGLE_COMMENT triangleco1_ on comments0_.COMMENT_ID=triangleco1_.ID where comments0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select projectdat0_.ID as ID3_0_, projectdat0_.VERSION as VERSION3_0_, projectdat0_.CLAIM_TYPE_ID as CLAIM4_8_0_, projectdat0_.DB_ID as DB1_8_0_, projectdat0_.IS_TRIANGLE as IS2_8_0_, projectdat0_.NAME as NAME8_0_ from JRESERVE.DATA_TYPE projectdat0_ where projectdat0_.ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: Triangle [Claim count]
DEBUG [org.hibernate.SQL]: select modificati0_.TRIANGLE_ID as TRIANGLE1_3_1_, modificati0_.MODIFICATION_ID as MODIFICA2_1_, trianglemo1_.ID as ID0_0_, trianglemo1_.SMOOTH_ORDER as SMOOTH2_0_0_, trianglemo1_.VERSION as VERSION0_0_, trianglemo1_1_.SMOOTHING_NAME as SMOOTHING1_1_0_, trianglemo1_3_.ACCIDENT_PERIOD as ACCIDENT1_9_0_, trianglemo1_3_.DEVELOPMENT_PERIOD as DEVELOPM2_9_0_, trianglemo1_3_.CORRIGATED_VALUE as CORRIGATED3_9_0_, trianglemo1_3_.MODIFICATION_ORDER as MODIFICA4_9_0_, trianglemo1_5_.ALPHA as ALPHA17_0_, case when trianglemo1_2_.ID is not null then 2 when trianglemo1_4_.ID is not null then 4 when trianglemo1_5_.ID is not null then 5 when trianglemo1_1_.ID is not null then 1 when trianglemo1_3_.ID is not null then 3 when trianglemo1_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK modificati0_ inner join JRESERVE.TRIANGLE_MODIFICATION trianglemo1_ on modificati0_.MODIFICATION_ID=trianglemo1_.ID left outer join JRESERVE.SMOOTHING trianglemo1_1_ on trianglemo1_.ID=trianglemo1_1_.ID left outer join JRESERVE.GEOMETRIC_SMOOTHING trianglemo1_2_ on trianglemo1_.ID=trianglemo1_2_.ID left outer join JRESERVE.TRIANGLE_CORRECTION trianglemo1_3_ on trianglemo1_.ID=trianglemo1_3_.ID left outer join JRESERVE.ARITHMETIC_SMOOTHING trianglemo1_4_ on trianglemo1_.ID=trianglemo1_4_.ID left outer join JRESERVE.EXPONENTIAL_SMOOTHING trianglemo1_5_ on trianglemo1_.ID=trianglemo1_5_.ID where modificati0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select cells0_.SMOOTHING_ID as SMOOTHING4_0_1_, cells0_.ID as ID1_, cells0_.ID as ID3_0_, cells0_.VERSION as VERSION3_0_, cells0_.APPLIED as APPLIED15_0_, cells0_.ACCIDENT_PERIOD as ACCIDENT2_15_0_, cells0_.DEVELOPMENT_PERIOD as DEVELOPM3_15_0_, cells0_.SMOOTHING_ID as SMOOTHING4_15_0_ from JRESERVE.SMOOTHING_CELL cells0_ where cells0_.SMOOTHING_ID=?
DEBUG [org.hibernate.SQL]: select cells0_.SMOOTHING_ID as SMOOTHING4_0_1_, cells0_.ID as ID1_, cells0_.ID as ID3_0_, cells0_.VERSION as VERSION3_0_, cells0_.APPLIED as APPLIED15_0_, cells0_.ACCIDENT_PERIOD as ACCIDENT2_15_0_, cells0_.DEVELOPMENT_PERIOD as DEVELOPM3_15_0_, cells0_.SMOOTHING_ID as SMOOTHING4_15_0_ from JRESERVE.SMOOTHING_CELL cells0_ where cells0_.SMOOTHING_ID=?
DEBUG [org.hibernate.SQL]: select comments0_.TRIANGLE_ID as TRIANGLE1_3_1_, comments0_.COMMENT_ID as COMMENT2_1_, triangleco1_.ID as ID3_0_, triangleco1_.VERSION as VERSION3_0_, triangleco1_.ACCIDENT_PERIOD as ACCIDENT1_6_0_, triangleco1_.DEVELOPMENT_PERIOD as DEVELOPM2_6_0_, triangleco1_.COMMANT_TEXT as COMMANT3_6_0_, triangleco1_.CREATION_DATE as CREATION4_6_0_, triangleco1_.USER_NAME as USER5_6_0_ from JRESERVE.TRIANGLE_COMMENT_LINK comments0_ inner join JRESERVE.TRIANGLE_COMMENT triangleco1_ on comments0_.COMMENT_ID=triangleco1_.ID where comments0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select projectdat0_.ID as ID3_0_, projectdat0_.VERSION as VERSION3_0_, projectdat0_.CLAIM_TYPE_ID as CLAIM4_8_0_, projectdat0_.DB_ID as DB1_8_0_, projectdat0_.IS_TRIANGLE as IS2_8_0_, projectdat0_.NAME as NAME8_0_ from JRESERVE.DATA_TYPE projectdat0_ where projectdat0_.ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: Triangle [Incurred]
DEBUG [org.hibernate.SQL]: select modificati0_.TRIANGLE_ID as TRIANGLE1_3_1_, modificati0_.MODIFICATION_ID as MODIFICA2_1_, trianglemo1_.ID as ID0_0_, trianglemo1_.SMOOTH_ORDER as SMOOTH2_0_0_, trianglemo1_.VERSION as VERSION0_0_, trianglemo1_1_.SMOOTHING_NAME as SMOOTHING1_1_0_, trianglemo1_3_.ACCIDENT_PERIOD as ACCIDENT1_9_0_, trianglemo1_3_.DEVELOPMENT_PERIOD as DEVELOPM2_9_0_, trianglemo1_3_.CORRIGATED_VALUE as CORRIGATED3_9_0_, trianglemo1_3_.MODIFICATION_ORDER as MODIFICA4_9_0_, trianglemo1_5_.ALPHA as ALPHA17_0_, case when trianglemo1_2_.ID is not null then 2 when trianglemo1_4_.ID is not null then 4 when trianglemo1_5_.ID is not null then 5 when trianglemo1_1_.ID is not null then 1 when trianglemo1_3_.ID is not null then 3 when trianglemo1_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK modificati0_ inner join JRESERVE.TRIANGLE_MODIFICATION trianglemo1_ on modificati0_.MODIFICATION_ID=trianglemo1_.ID left outer join JRESERVE.SMOOTHING trianglemo1_1_ on trianglemo1_.ID=trianglemo1_1_.ID left outer join JRESERVE.GEOMETRIC_SMOOTHING trianglemo1_2_ on trianglemo1_.ID=trianglemo1_2_.ID left outer join JRESERVE.TRIANGLE_CORRECTION trianglemo1_3_ on trianglemo1_.ID=trianglemo1_3_.ID left outer join JRESERVE.ARITHMETIC_SMOOTHING trianglemo1_4_ on trianglemo1_.ID=trianglemo1_4_.ID left outer join JRESERVE.EXPONENTIAL_SMOOTHING trianglemo1_5_ on trianglemo1_.ID=trianglemo1_5_.ID where modificati0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select comments0_.TRIANGLE_ID as TRIANGLE1_3_1_, comments0_.COMMENT_ID as COMMENT2_1_, triangleco1_.ID as ID3_0_, triangleco1_.VERSION as VERSION3_0_, triangleco1_.ACCIDENT_PERIOD as ACCIDENT1_6_0_, triangleco1_.DEVELOPMENT_PERIOD as DEVELOPM2_6_0_, triangleco1_.COMMANT_TEXT as COMMANT3_6_0_, triangleco1_.CREATION_DATE as CREATION4_6_0_, triangleco1_.USER_NAME as USER5_6_0_ from JRESERVE.TRIANGLE_COMMENT_LINK comments0_ inner join JRESERVE.TRIANGLE_COMMENT triangleco1_ on comments0_.COMMENT_ID=triangleco1_.ID where comments0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select projectdat0_.ID as ID3_0_, projectdat0_.VERSION as VERSION3_0_, projectdat0_.CLAIM_TYPE_ID as CLAIM4_8_0_, projectdat0_.DB_ID as DB1_8_0_, projectdat0_.IS_TRIANGLE as IS2_8_0_, projectdat0_.NAME as NAME8_0_ from JRESERVE.DATA_TYPE projectdat0_ where projectdat0_.ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: Triangle [Paid]
DEBUG [org.hibernate.SQL]: select modificati0_.TRIANGLE_ID as TRIANGLE1_3_1_, modificati0_.MODIFICATION_ID as MODIFICA2_1_, trianglemo1_.ID as ID0_0_, trianglemo1_.SMOOTH_ORDER as SMOOTH2_0_0_, trianglemo1_.VERSION as VERSION0_0_, trianglemo1_1_.SMOOTHING_NAME as SMOOTHING1_1_0_, trianglemo1_3_.ACCIDENT_PERIOD as ACCIDENT1_9_0_, trianglemo1_3_.DEVELOPMENT_PERIOD as DEVELOPM2_9_0_, trianglemo1_3_.CORRIGATED_VALUE as CORRIGATED3_9_0_, trianglemo1_3_.MODIFICATION_ORDER as MODIFICA4_9_0_, trianglemo1_5_.ALPHA as ALPHA17_0_, case when trianglemo1_2_.ID is not null then 2 when trianglemo1_4_.ID is not null then 4 when trianglemo1_5_.ID is not null then 5 when trianglemo1_1_.ID is not null then 1 when trianglemo1_3_.ID is not null then 3 when trianglemo1_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK modificati0_ inner join JRESERVE.TRIANGLE_MODIFICATION trianglemo1_ on modificati0_.MODIFICATION_ID=trianglemo1_.ID left outer join JRESERVE.SMOOTHING trianglemo1_1_ on trianglemo1_.ID=trianglemo1_1_.ID left outer join JRESERVE.GEOMETRIC_SMOOTHING trianglemo1_2_ on trianglemo1_.ID=trianglemo1_2_.ID left outer join JRESERVE.TRIANGLE_CORRECTION trianglemo1_3_ on trianglemo1_.ID=trianglemo1_3_.ID left outer join JRESERVE.ARITHMETIC_SMOOTHING trianglemo1_4_ on trianglemo1_.ID=trianglemo1_4_.ID left outer join JRESERVE.EXPONENTIAL_SMOOTHING trianglemo1_5_ on trianglemo1_.ID=trianglemo1_5_.ID where modificati0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select comments0_.TRIANGLE_ID as TRIANGLE1_3_1_, comments0_.COMMENT_ID as COMMENT2_1_, triangleco1_.ID as ID3_0_, triangleco1_.VERSION as VERSION3_0_, triangleco1_.ACCIDENT_PERIOD as ACCIDENT1_6_0_, triangleco1_.DEVELOPMENT_PERIOD as DEVELOPM2_6_0_, triangleco1_.COMMANT_TEXT as COMMANT3_6_0_, triangleco1_.CREATION_DATE as CREATION4_6_0_, triangleco1_.USER_NAME as USER5_6_0_ from JRESERVE.TRIANGLE_COMMENT_LINK comments0_ inner join JRESERVE.TRIANGLE_COMMENT triangleco1_ on comments0_.COMMENT_ID=triangleco1_.ID where comments0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select projectdat0_.ID as ID3_0_, projectdat0_.VERSION as VERSION3_0_, projectdat0_.CLAIM_TYPE_ID as CLAIM4_8_0_, projectdat0_.DB_ID as DB1_8_0_, projectdat0_.IS_TRIANGLE as IS2_8_0_, projectdat0_.NAME as NAME8_0_ from JRESERVE.DATA_TYPE projectdat0_ where projectdat0_.ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectElementContainer [Estimates]
DEBUG [org.hibernate.SQL]: select projectdat0_.ID as ID3_, projectdat0_.VERSION as VERSION3_, projectdat0_.CLAIM_TYPE_ID as CLAIM4_8_, projectdat0_.DB_ID as DB1_8_, projectdat0_.IS_TRIANGLE as IS2_8_, projectdat0_.NAME as NAME8_ from JRESERVE.DATA_TYPE projectdat0_ where projectdat0_.CLAIM_TYPE_ID=? order by projectdat0_.DB_ID
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectDataType [100; Incurred; ClaimType [BI]]
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectDataType [200; Paid; ClaimType [BI]]
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectDataType [300; Claim count; ClaimType [BI]]
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectDataType [400; Burning cost; ClaimType [BI]]
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ClaimType [MD]
DEBUG [org.hibernate.SQL]: select projects0_.CLAIM_TYPE_ID as CLAIM3_3_1_, projects0_.ID as ID1_, projects0_.ID as ID3_0_, projects0_.VERSION as VERSION3_0_, projects0_.CLAIM_TYPE_ID as CLAIM3_5_0_, projects0_.PROJECT_DESCRIPTION as PROJECT1_5_0_, projects0_.PROJECT_NAME as PROJECT2_5_0_ from JRESERVE.PROJECT projects0_ where projects0_.CLAIM_TYPE_ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: Project [Base]
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectElementContainer [Data]
DEBUG [org.hibernate.SQL]: select triangle0_.ID as ID3_, triangle0_.VERSION as VERSION3_, triangle0_.DATA_TYPE_ID as DATA9_12_, triangle0_.DESCRIPTION as DESCRIPT1_12_, triangle0_.MONTH_IN_ACCIDENT as MONTH2_12_, triangle0_.ACCIDENT_PERIODS as ACCIDENT3_12_, triangle0_.MONTH_IN_DEVELOPMENT as MONTH4_12_, triangle0_.DEVELOPMENT_PERIODS as DEVELOPM5_12_, triangle0_.START_DATE as START6_12_, triangle0_.IS_TRIANGLE as IS7_12_, triangle0_.NAME as NAME12_, triangle0_.PROJECT_ID as PROJECT10_12_ from JRESERVE.TRIANGLE triangle0_ where triangle0_.PROJECT_ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: Vector [Burning cost]
DEBUG [org.hibernate.SQL]: select modificati0_.TRIANGLE_ID as TRIANGLE1_3_1_, modificati0_.MODIFICATION_ID as MODIFICA2_1_, trianglemo1_.ID as ID0_0_, trianglemo1_.SMOOTH_ORDER as SMOOTH2_0_0_, trianglemo1_.VERSION as VERSION0_0_, trianglemo1_1_.SMOOTHING_NAME as SMOOTHING1_1_0_, trianglemo1_3_.ACCIDENT_PERIOD as ACCIDENT1_9_0_, trianglemo1_3_.DEVELOPMENT_PERIOD as DEVELOPM2_9_0_, trianglemo1_3_.CORRIGATED_VALUE as CORRIGATED3_9_0_, trianglemo1_3_.MODIFICATION_ORDER as MODIFICA4_9_0_, trianglemo1_5_.ALPHA as ALPHA17_0_, case when trianglemo1_2_.ID is not null then 2 when trianglemo1_4_.ID is not null then 4 when trianglemo1_5_.ID is not null then 5 when trianglemo1_1_.ID is not null then 1 when trianglemo1_3_.ID is not null then 3 when trianglemo1_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK modificati0_ inner join JRESERVE.TRIANGLE_MODIFICATION trianglemo1_ on modificati0_.MODIFICATION_ID=trianglemo1_.ID left outer join JRESERVE.SMOOTHING trianglemo1_1_ on trianglemo1_.ID=trianglemo1_1_.ID left outer join JRESERVE.GEOMETRIC_SMOOTHING trianglemo1_2_ on trianglemo1_.ID=trianglemo1_2_.ID left outer join JRESERVE.TRIANGLE_CORRECTION trianglemo1_3_ on trianglemo1_.ID=trianglemo1_3_.ID left outer join JRESERVE.ARITHMETIC_SMOOTHING trianglemo1_4_ on trianglemo1_.ID=trianglemo1_4_.ID left outer join JRESERVE.EXPONENTIAL_SMOOTHING trianglemo1_5_ on trianglemo1_.ID=trianglemo1_5_.ID where modificati0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select comments0_.TRIANGLE_ID as TRIANGLE1_3_1_, comments0_.COMMENT_ID as COMMENT2_1_, triangleco1_.ID as ID3_0_, triangleco1_.VERSION as VERSION3_0_, triangleco1_.ACCIDENT_PERIOD as ACCIDENT1_6_0_, triangleco1_.DEVELOPMENT_PERIOD as DEVELOPM2_6_0_, triangleco1_.COMMANT_TEXT as COMMANT3_6_0_, triangleco1_.CREATION_DATE as CREATION4_6_0_, triangleco1_.USER_NAME as USER5_6_0_ from JRESERVE.TRIANGLE_COMMENT_LINK comments0_ inner join JRESERVE.TRIANGLE_COMMENT triangleco1_ on comments0_.COMMENT_ID=triangleco1_.ID where comments0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select projectdat0_.ID as ID3_0_, projectdat0_.VERSION as VERSION3_0_, projectdat0_.CLAIM_TYPE_ID as CLAIM4_8_0_, projectdat0_.DB_ID as DB1_8_0_, projectdat0_.IS_TRIANGLE as IS2_8_0_, projectdat0_.NAME as NAME8_0_ from JRESERVE.DATA_TYPE projectdat0_ where projectdat0_.ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: Triangle [Claim count]
DEBUG [org.hibernate.SQL]: select modificati0_.TRIANGLE_ID as TRIANGLE1_3_1_, modificati0_.MODIFICATION_ID as MODIFICA2_1_, trianglemo1_.ID as ID0_0_, trianglemo1_.SMOOTH_ORDER as SMOOTH2_0_0_, trianglemo1_.VERSION as VERSION0_0_, trianglemo1_1_.SMOOTHING_NAME as SMOOTHING1_1_0_, trianglemo1_3_.ACCIDENT_PERIOD as ACCIDENT1_9_0_, trianglemo1_3_.DEVELOPMENT_PERIOD as DEVELOPM2_9_0_, trianglemo1_3_.CORRIGATED_VALUE as CORRIGATED3_9_0_, trianglemo1_3_.MODIFICATION_ORDER as MODIFICA4_9_0_, trianglemo1_5_.ALPHA as ALPHA17_0_, case when trianglemo1_2_.ID is not null then 2 when trianglemo1_4_.ID is not null then 4 when trianglemo1_5_.ID is not null then 5 when trianglemo1_1_.ID is not null then 1 when trianglemo1_3_.ID is not null then 3 when trianglemo1_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK modificati0_ inner join JRESERVE.TRIANGLE_MODIFICATION trianglemo1_ on modificati0_.MODIFICATION_ID=trianglemo1_.ID left outer join JRESERVE.SMOOTHING trianglemo1_1_ on trianglemo1_.ID=trianglemo1_1_.ID left outer join JRESERVE.GEOMETRIC_SMOOTHING trianglemo1_2_ on trianglemo1_.ID=trianglemo1_2_.ID left outer join JRESERVE.TRIANGLE_CORRECTION trianglemo1_3_ on trianglemo1_.ID=trianglemo1_3_.ID left outer join JRESERVE.ARITHMETIC_SMOOTHING trianglemo1_4_ on trianglemo1_.ID=trianglemo1_4_.ID left outer join JRESERVE.EXPONENTIAL_SMOOTHING trianglemo1_5_ on trianglemo1_.ID=trianglemo1_5_.ID where modificati0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select comments0_.TRIANGLE_ID as TRIANGLE1_3_1_, comments0_.COMMENT_ID as COMMENT2_1_, triangleco1_.ID as ID3_0_, triangleco1_.VERSION as VERSION3_0_, triangleco1_.ACCIDENT_PERIOD as ACCIDENT1_6_0_, triangleco1_.DEVELOPMENT_PERIOD as DEVELOPM2_6_0_, triangleco1_.COMMANT_TEXT as COMMANT3_6_0_, triangleco1_.CREATION_DATE as CREATION4_6_0_, triangleco1_.USER_NAME as USER5_6_0_ from JRESERVE.TRIANGLE_COMMENT_LINK comments0_ inner join JRESERVE.TRIANGLE_COMMENT triangleco1_ on comments0_.COMMENT_ID=triangleco1_.ID where comments0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select projectdat0_.ID as ID3_0_, projectdat0_.VERSION as VERSION3_0_, projectdat0_.CLAIM_TYPE_ID as CLAIM4_8_0_, projectdat0_.DB_ID as DB1_8_0_, projectdat0_.IS_TRIANGLE as IS2_8_0_, projectdat0_.NAME as NAME8_0_ from JRESERVE.DATA_TYPE projectdat0_ where projectdat0_.ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: Triangle [Incurred]
DEBUG [org.hibernate.SQL]: select modificati0_.TRIANGLE_ID as TRIANGLE1_3_1_, modificati0_.MODIFICATION_ID as MODIFICA2_1_, trianglemo1_.ID as ID0_0_, trianglemo1_.SMOOTH_ORDER as SMOOTH2_0_0_, trianglemo1_.VERSION as VERSION0_0_, trianglemo1_1_.SMOOTHING_NAME as SMOOTHING1_1_0_, trianglemo1_3_.ACCIDENT_PERIOD as ACCIDENT1_9_0_, trianglemo1_3_.DEVELOPMENT_PERIOD as DEVELOPM2_9_0_, trianglemo1_3_.CORRIGATED_VALUE as CORRIGATED3_9_0_, trianglemo1_3_.MODIFICATION_ORDER as MODIFICA4_9_0_, trianglemo1_5_.ALPHA as ALPHA17_0_, case when trianglemo1_2_.ID is not null then 2 when trianglemo1_4_.ID is not null then 4 when trianglemo1_5_.ID is not null then 5 when trianglemo1_1_.ID is not null then 1 when trianglemo1_3_.ID is not null then 3 when trianglemo1_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK modificati0_ inner join JRESERVE.TRIANGLE_MODIFICATION trianglemo1_ on modificati0_.MODIFICATION_ID=trianglemo1_.ID left outer join JRESERVE.SMOOTHING trianglemo1_1_ on trianglemo1_.ID=trianglemo1_1_.ID left outer join JRESERVE.GEOMETRIC_SMOOTHING trianglemo1_2_ on trianglemo1_.ID=trianglemo1_2_.ID left outer join JRESERVE.TRIANGLE_CORRECTION trianglemo1_3_ on trianglemo1_.ID=trianglemo1_3_.ID left outer join JRESERVE.ARITHMETIC_SMOOTHING trianglemo1_4_ on trianglemo1_.ID=trianglemo1_4_.ID left outer join JRESERVE.EXPONENTIAL_SMOOTHING trianglemo1_5_ on trianglemo1_.ID=trianglemo1_5_.ID where modificati0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select comments0_.TRIANGLE_ID as TRIANGLE1_3_1_, comments0_.COMMENT_ID as COMMENT2_1_, triangleco1_.ID as ID3_0_, triangleco1_.VERSION as VERSION3_0_, triangleco1_.ACCIDENT_PERIOD as ACCIDENT1_6_0_, triangleco1_.DEVELOPMENT_PERIOD as DEVELOPM2_6_0_, triangleco1_.COMMANT_TEXT as COMMANT3_6_0_, triangleco1_.CREATION_DATE as CREATION4_6_0_, triangleco1_.USER_NAME as USER5_6_0_ from JRESERVE.TRIANGLE_COMMENT_LINK comments0_ inner join JRESERVE.TRIANGLE_COMMENT triangleco1_ on comments0_.COMMENT_ID=triangleco1_.ID where comments0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select projectdat0_.ID as ID3_0_, projectdat0_.VERSION as VERSION3_0_, projectdat0_.CLAIM_TYPE_ID as CLAIM4_8_0_, projectdat0_.DB_ID as DB1_8_0_, projectdat0_.IS_TRIANGLE as IS2_8_0_, projectdat0_.NAME as NAME8_0_ from JRESERVE.DATA_TYPE projectdat0_ where projectdat0_.ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: Triangle [Paid]
DEBUG [org.hibernate.SQL]: select modificati0_.TRIANGLE_ID as TRIANGLE1_3_1_, modificati0_.MODIFICATION_ID as MODIFICA2_1_, trianglemo1_.ID as ID0_0_, trianglemo1_.SMOOTH_ORDER as SMOOTH2_0_0_, trianglemo1_.VERSION as VERSION0_0_, trianglemo1_1_.SMOOTHING_NAME as SMOOTHING1_1_0_, trianglemo1_3_.ACCIDENT_PERIOD as ACCIDENT1_9_0_, trianglemo1_3_.DEVELOPMENT_PERIOD as DEVELOPM2_9_0_, trianglemo1_3_.CORRIGATED_VALUE as CORRIGATED3_9_0_, trianglemo1_3_.MODIFICATION_ORDER as MODIFICA4_9_0_, trianglemo1_5_.ALPHA as ALPHA17_0_, case when trianglemo1_2_.ID is not null then 2 when trianglemo1_4_.ID is not null then 4 when trianglemo1_5_.ID is not null then 5 when trianglemo1_1_.ID is not null then 1 when trianglemo1_3_.ID is not null then 3 when trianglemo1_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK modificati0_ inner join JRESERVE.TRIANGLE_MODIFICATION trianglemo1_ on modificati0_.MODIFICATION_ID=trianglemo1_.ID left outer join JRESERVE.SMOOTHING trianglemo1_1_ on trianglemo1_.ID=trianglemo1_1_.ID left outer join JRESERVE.GEOMETRIC_SMOOTHING trianglemo1_2_ on trianglemo1_.ID=trianglemo1_2_.ID left outer join JRESERVE.TRIANGLE_CORRECTION trianglemo1_3_ on trianglemo1_.ID=trianglemo1_3_.ID left outer join JRESERVE.ARITHMETIC_SMOOTHING trianglemo1_4_ on trianglemo1_.ID=trianglemo1_4_.ID left outer join JRESERVE.EXPONENTIAL_SMOOTHING trianglemo1_5_ on trianglemo1_.ID=trianglemo1_5_.ID where modificati0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select comments0_.TRIANGLE_ID as TRIANGLE1_3_1_, comments0_.COMMENT_ID as COMMENT2_1_, triangleco1_.ID as ID3_0_, triangleco1_.VERSION as VERSION3_0_, triangleco1_.ACCIDENT_PERIOD as ACCIDENT1_6_0_, triangleco1_.DEVELOPMENT_PERIOD as DEVELOPM2_6_0_, triangleco1_.COMMANT_TEXT as COMMANT3_6_0_, triangleco1_.CREATION_DATE as CREATION4_6_0_, triangleco1_.USER_NAME as USER5_6_0_ from JRESERVE.TRIANGLE_COMMENT_LINK comments0_ inner join JRESERVE.TRIANGLE_COMMENT triangleco1_ on comments0_.COMMENT_ID=triangleco1_.ID where comments0_.TRIANGLE_ID=?
DEBUG [org.hibernate.SQL]: select projectdat0_.ID as ID3_0_, projectdat0_.VERSION as VERSION3_0_, projectdat0_.CLAIM_TYPE_ID as CLAIM4_8_0_, projectdat0_.DB_ID as DB1_8_0_, projectdat0_.IS_TRIANGLE as IS2_8_0_, projectdat0_.NAME as NAME8_0_ from JRESERVE.DATA_TYPE projectdat0_ where projectdat0_.ID=?
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectElementContainer [Estimates]
DEBUG [org.hibernate.SQL]: select projectdat0_.ID as ID3_, projectdat0_.VERSION as VERSION3_, projectdat0_.CLAIM_TYPE_ID as CLAIM4_8_, projectdat0_.DB_ID as DB1_8_, projectdat0_.IS_TRIANGLE as IS2_8_, projectdat0_.NAME as NAME8_ from JRESERVE.DATA_TYPE projectdat0_ where projectdat0_.CLAIM_TYPE_ID=? order by projectdat0_.DB_ID
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectDataType [100; Incurred; ClaimType [MD]]
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectDataType [200; Paid; ClaimType [MD]]
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectDataType [300; Claim count; ClaimType [MD]]
FINE [org.jreserve.project.system.AbstractProjectElementFactory]: Loaded project element: ProjectDataType [400; Burning cost; ClaimType [MD]]
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loading values from "JReserve/Audit/AuditFactories"...
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.triangle.audit.TriangleAuditor
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.data.projectdatatype.ClaimTypeProjectDataTypeAuditor
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.project.entities.project.ProjectAuditor
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.project.entities.claimtype.ClaimTypeAuditor
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.data.projectdatatype.ProjectDataTypeDataLogAuditor
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.triangle.audit.ProjectTriangleAuditor
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.data.projectdatatype.ProjectDataTypeAuditor
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.project.entities.lob.LoBAuditor
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.data.projectdatatype.ClaimTypeDataLogAuditor
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.project.entities.project.ClaimTypeProjectAuditor
FINE [org.jreserve.resources.annotation.RegistrationRegistry]: Loaded instance: org.jreserve.project.entities.claimtype.LoBClaimTypeAuditor
DEBUG [org.hibernate.SQL]: select triangle_a0_.ID as ID20_0_, triangle_a0_.REV as REV20_0_, jreservere1_.REVISION_NUMBER as REVISION1_10_1_, triangle_a0_.REVTYPE as REVTYPE20_0_, triangle_a0_.DESCRIPTION as DESCRIPT1_24_0_, triangle_a0_.MONTH_IN_ACCIDENT as MONTH2_24_0_, triangle_a0_.ACCIDENT_PERIODS as ACCIDENT3_24_0_, triangle_a0_.MONTH_IN_DEVELOPMENT as MONTH4_24_0_, triangle_a0_.DEVELOPMENT_PERIODS as DEVELOPM5_24_0_, triangle_a0_.START_DATE as START6_24_0_, triangle_a0_.IS_TRIANGLE as IS7_24_0_, triangle_a0_.NAME as NAME24_0_, triangle_a0_.DATA_TYPE_ID as DATA9_24_0_, triangle_a0_.PROJECT_ID as PROJECT10_24_0_, jreservere1_.REVISION_TIME as REVISION2_10_1_, jreservere1_.USER_NAME as USER3_10_1_ from JRESERVE.TRIANGLE_AUD triangle_a0_, JRESERVE.REVISION jreservere1_ where triangle_a0_.ID=? and triangle_a0_.REV=jreservere1_.REVISION_NUMBER order by triangle_a0_.REV asc
DEBUG [org.hibernate.SQL]: select triangle_m0_.REV as col_0_0_, triangle_m0_.TRIANGLE_ID as col_0_1_, triangle_m0_.MODIFICATION_ID as col_0_2_, trianglemo1_.ID as col_1_0_, trianglemo1_.REV as col_1_1_ from JRESERVE.TRIANGLE_MODIFICATION_LINK_AUD triangle_m0_, JRESERVE.TRIANGLE_MODIFICATION_AUD trianglemo1_ left outer join JRESERVE.TRIANGLE_CORRECTION_AUD trianglemo1_1_ on trianglemo1_.ID=trianglemo1_1_.ID and trianglemo1_.REV=trianglemo1_1_.REV left outer join JRESERVE.SMOOTHING_AUD trianglemo1_2_ on trianglemo1_.ID=trianglemo1_2_.ID and trianglemo1_.REV=trianglemo1_2_.REV left outer join JRESERVE.EXPONENTIAL_SMOOTHING_AUD trianglemo1_3_ on trianglemo1_.ID=trianglemo1_3_.ID and trianglemo1_.REV=trianglemo1_3_.REV left outer join JRESERVE.GEOMETRIC_SMOOTHING_AUD trianglemo1_4_ on trianglemo1_.ID=trianglemo1_4_.ID and trianglemo1_.REV=trianglemo1_4_.REV left outer join JRESERVE.ARITHMETIC_SMOOTHING_AUD trianglemo1_5_ on trianglemo1_.ID=trianglemo1_5_.ID and trianglemo1_.REV=trianglemo1_5_.REV where triangle_m0_.MODIFICATION_ID=trianglemo1_.ID and triangle_m0_.TRIANGLE_ID=? and trianglemo1_.REV=(select max(trianglemo2_.REV) from JRESERVE.TRIANGLE_MODIFICATION_AUD trianglemo2_ where trianglemo2_.REV<=? and trianglemo1_.ID=trianglemo2_.ID) and triangle_m0_.REV=(select max(triangle_m3_.REV) from JRESERVE.TRIANGLE_MODIFICATION_LINK_AUD triangle_m3_ where triangle_m3_.REV<=? and triangle_m0_.TRIANGLE_ID=triangle_m3_.TRIANGLE_ID and triangle_m0_.MODIFICATION_ID=triangle_m3_.MODIFICATION_ID) and triangle_m0_.REVTYPE<>? and trianglemo1_.REVTYPE<>?
DEBUG [org.hibernate.SQL]: select triangle_m0_.REV as REV26_0_, triangle_m0_.TRIANGLE_ID as TRIANGLE2_26_0_, triangle_m0_.MODIFICATION_ID as MODIFICA3_26_0_, triangle_m0_.REVTYPE as REVTYPE26_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK_AUD triangle_m0_ where triangle_m0_.REV=? and triangle_m0_.TRIANGLE_ID=? and triangle_m0_.MODIFICATION_ID=?
DEBUG [org.hibernate.SQL]: select trianglemo0_.ID as ID32_0_, trianglemo0_.REV as REV32_0_, trianglemo0_.REVTYPE as REVTYPE32_0_, trianglemo0_1_.ACCIDENT_PERIOD as ACCIDENT3_33_0_, trianglemo0_1_.DEVELOPMENT_PERIOD as DEVELOPM4_33_0_, trianglemo0_1_.CORRIGATED_VALUE as CORRIGATED5_33_0_, trianglemo0_1_.MODIFICATION_ORDER as MODIFICA6_33_0_, trianglemo0_2_.SMOOTHING_NAME as SMOOTHING3_34_0_, trianglemo0_3_.ALPHA as ALPHA35_0_, case when trianglemo0_3_.ID is not null then 3 when trianglemo0_4_.ID is not null then 4 when trianglemo0_5_.ID is not null then 5 when trianglemo0_1_.ID is not null then 1 when trianglemo0_2_.ID is not null then 2 when trianglemo0_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_AUD trianglemo0_ left outer join JRESERVE.TRIANGLE_CORRECTION_AUD trianglemo0_1_ on trianglemo0_.ID=trianglemo0_1_.ID and trianglemo0_.REV=trianglemo0_1_.REV left outer join JRESERVE.SMOOTHING_AUD trianglemo0_2_ on trianglemo0_.ID=trianglemo0_2_.ID and trianglemo0_.REV=trianglemo0_2_.REV left outer join JRESERVE.EXPONENTIAL_SMOOTHING_AUD trianglemo0_3_ on trianglemo0_.ID=trianglemo0_3_.ID and trianglemo0_.REV=trianglemo0_3_.REV left outer join JRESERVE.GEOMETRIC_SMOOTHING_AUD trianglemo0_4_ on trianglemo0_.ID=trianglemo0_4_.ID and trianglemo0_.REV=trianglemo0_4_.REV left outer join JRESERVE.ARITHMETIC_SMOOTHING_AUD trianglemo0_5_ on trianglemo0_.ID=trianglemo0_5_.ID and trianglemo0_.REV=trianglemo0_5_.REV where trianglemo0_.ID=? and trianglemo0_.REV=?
DEBUG [org.hibernate.SQL]: select triangle_m0_.REV as REV26_0_, triangle_m0_.TRIANGLE_ID as TRIANGLE2_26_0_, triangle_m0_.MODIFICATION_ID as MODIFICA3_26_0_, triangle_m0_.REVTYPE as REVTYPE26_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK_AUD triangle_m0_ where triangle_m0_.REV=? and triangle_m0_.TRIANGLE_ID=? and triangle_m0_.MODIFICATION_ID=?
DEBUG [org.hibernate.SQL]: select trianglemo0_.ID as ID32_0_, trianglemo0_.REV as REV32_0_, trianglemo0_.REVTYPE as REVTYPE32_0_, trianglemo0_1_.ACCIDENT_PERIOD as ACCIDENT3_33_0_, trianglemo0_1_.DEVELOPMENT_PERIOD as DEVELOPM4_33_0_, trianglemo0_1_.CORRIGATED_VALUE as CORRIGATED5_33_0_, trianglemo0_1_.MODIFICATION_ORDER as MODIFICA6_33_0_, trianglemo0_2_.SMOOTHING_NAME as SMOOTHING3_34_0_, trianglemo0_3_.ALPHA as ALPHA35_0_, case when trianglemo0_3_.ID is not null then 3 when trianglemo0_4_.ID is not null then 4 when trianglemo0_5_.ID is not null then 5 when trianglemo0_1_.ID is not null then 1 when trianglemo0_2_.ID is not null then 2 when trianglemo0_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_AUD trianglemo0_ left outer join JRESERVE.TRIANGLE_CORRECTION_AUD trianglemo0_1_ on trianglemo0_.ID=trianglemo0_1_.ID and trianglemo0_.REV=trianglemo0_1_.REV left outer join JRESERVE.SMOOTHING_AUD trianglemo0_2_ on trianglemo0_.ID=trianglemo0_2_.ID and trianglemo0_.REV=trianglemo0_2_.REV left outer join JRESERVE.EXPONENTIAL_SMOOTHING_AUD trianglemo0_3_ on trianglemo0_.ID=trianglemo0_3_.ID and trianglemo0_.REV=trianglemo0_3_.REV left outer join JRESERVE.GEOMETRIC_SMOOTHING_AUD trianglemo0_4_ on trianglemo0_.ID=trianglemo0_4_.ID and trianglemo0_.REV=trianglemo0_4_.REV left outer join JRESERVE.ARITHMETIC_SMOOTHING_AUD trianglemo0_5_ on trianglemo0_.ID=trianglemo0_5_.ID and trianglemo0_.REV=trianglemo0_5_.REV where trianglemo0_.ID=? and trianglemo0_.REV=?
DEBUG [org.hibernate.SQL]: select triangle_m0_.REV as col_0_0_, triangle_m0_.TRIANGLE_ID as col_0_1_, triangle_m0_.MODIFICATION_ID as col_0_2_, trianglemo1_.ID as col_1_0_, trianglemo1_.REV as col_1_1_ from JRESERVE.TRIANGLE_MODIFICATION_LINK_AUD triangle_m0_, JRESERVE.TRIANGLE_MODIFICATION_AUD trianglemo1_ left outer join JRESERVE.TRIANGLE_CORRECTION_AUD trianglemo1_1_ on trianglemo1_.ID=trianglemo1_1_.ID and trianglemo1_.REV=trianglemo1_1_.REV left outer join JRESERVE.SMOOTHING_AUD trianglemo1_2_ on trianglemo1_.ID=trianglemo1_2_.ID and trianglemo1_.REV=trianglemo1_2_.REV left outer join JRESERVE.EXPONENTIAL_SMOOTHING_AUD trianglemo1_3_ on trianglemo1_.ID=trianglemo1_3_.ID and trianglemo1_.REV=trianglemo1_3_.REV left outer join JRESERVE.GEOMETRIC_SMOOTHING_AUD trianglemo1_4_ on trianglemo1_.ID=trianglemo1_4_.ID and trianglemo1_.REV=trianglemo1_4_.REV left outer join JRESERVE.ARITHMETIC_SMOOTHING_AUD trianglemo1_5_ on trianglemo1_.ID=trianglemo1_5_.ID and trianglemo1_.REV=trianglemo1_5_.REV where triangle_m0_.MODIFICATION_ID=trianglemo1_.ID and triangle_m0_.TRIANGLE_ID=? and trianglemo1_.REV=(select max(trianglemo2_.REV) from JRESERVE.TRIANGLE_MODIFICATION_AUD trianglemo2_ where trianglemo2_.REV<=? and trianglemo1_.ID=trianglemo2_.ID) and triangle_m0_.REV=(select max(triangle_m3_.REV) from JRESERVE.TRIANGLE_MODIFICATION_LINK_AUD triangle_m3_ where triangle_m3_.REV<=? and triangle_m0_.TRIANGLE_ID=triangle_m3_.TRIANGLE_ID and triangle_m0_.MODIFICATION_ID=triangle_m3_.MODIFICATION_ID) and triangle_m0_.REVTYPE<>? and trianglemo1_.REVTYPE<>?
DEBUG [org.hibernate.SQL]: select triangle_m0_.REV as REV26_0_, triangle_m0_.TRIANGLE_ID as TRIANGLE2_26_0_, triangle_m0_.MODIFICATION_ID as MODIFICA3_26_0_, triangle_m0_.REVTYPE as REVTYPE26_0_ from JRESERVE.TRIANGLE_MODIFICATION_LINK_AUD triangle_m0_ where triangle_m0_.REV=? and triangle_m0_.TRIANGLE_ID=? and triangle_m0_.MODIFICATION_ID=?
DEBUG [org.hibernate.SQL]: select trianglemo0_.ID as ID32_0_, trianglemo0_.REV as REV32_0_, trianglemo0_.REVTYPE as REVTYPE32_0_, trianglemo0_1_.ACCIDENT_PERIOD as ACCIDENT3_33_0_, trianglemo0_1_.DEVELOPMENT_PERIOD as DEVELOPM4_33_0_, trianglemo0_1_.CORRIGATED_VALUE as CORRIGATED5_33_0_, trianglemo0_1_.MODIFICATION_ORDER as MODIFICA6_33_0_, trianglemo0_2_.SMOOTHING_NAME as SMOOTHING3_34_0_, trianglemo0_3_.ALPHA as ALPHA35_0_, case when trianglemo0_3_.ID is not null then 3 when trianglemo0_4_.ID is not null then 4 when trianglemo0_5_.ID is not null then 5 when trianglemo0_1_.ID is not null then 1 when trianglemo0_2_.ID is not null then 2 when trianglemo0_.ID is not null then 0 else -1 end as clazz_0_ from JRESERVE.TRIANGLE_MODIFICATION_AUD trianglemo0_ left outer join JRESERVE.TRIANGLE_CORRECTION_AUD trianglemo0_1_ on trianglemo0_.ID=trianglemo0_1_.ID and trianglemo0_.REV=trianglemo0_1_.REV left outer join JRESERVE.SMOOTHING_AUD trianglemo0_2_ on trianglemo0_.ID=trianglemo0_2_.ID and trianglemo0_.REV=trianglemo0_2_.REV left outer join JRESERVE.EXPONENTIAL_SMOOTHING_AUD trianglemo0_3_ on trianglemo0_.ID=trianglemo0_3_.ID and trianglemo0_.REV=trianglemo0_3_.REV left outer join JRESERVE.GEOMETRIC_SMOOTHING_AUD trianglemo0_4_ on trianglemo0_.ID=trianglemo0_4_.ID and trianglemo0_.REV=trianglemo0_4_.REV left outer join JRESERVE.ARITHMETIC_SMOOTHING_AUD trianglemo0_5_ on trianglemo0_.ID=trianglemo0_5_.ID and trianglemo0_.REV=trianglemo0_5_.REV where trianglemo0_.ID=? and trianglemo0_.REV=?
DEBUG [org.hibernate.SQL]: select triangle_c0_.REV as col_0_0_, triangle_c0_.TRIANGLE_ID as col_0_1_, triangle_c0_.COMMENT_ID as col_0_2_, triangleco1_.ID as col_1_0_, triangleco1_.REV as col_1_1_ from JRESERVE.TRIANGLE_COMMENT_LINK_AUD triangle_c0_, JRESERVE.TRIANGLE_COMMENT_AUD triangleco1_ where triangle_c0_.COMMENT_ID=triangleco1_.ID and triangle_c0_.TRIANGLE_ID=? and triangleco1_.REV=(select max(triangleco2_.REV) from JRESERVE.TRIANGLE_COMMENT_AUD triangleco2_ where triangleco2_.REV<=? and triangleco1_.ID=triangleco2_.ID) and triangle_c0_.REV=(select max(triangle_c3_.REV) from JRESERVE.TRIANGLE_COMMENT_LINK_AUD triangle_c3_ where triangle_c3_.REV<=? and triangle_c0_.TRIANGLE_ID=triangle_c3_.TRIANGLE_ID and triangle_c0_.COMMENT_ID=triangle_c3_.COMMENT_ID) and triangle_c0_.REVTYPE<>? and triangleco1_.REVTYPE<>?
DEBUG [org.hibernate.SQL]: select triangle_c0_.REV as REV25_0_, triangle_c0_.TRIANGLE_ID as TRIANGLE2_25_0_, triangle_c0_.COMMENT_ID as COMMENT3_25_0_, triangle_c0_.REVTYPE as REVTYPE25_0_ from JRESERVE.TRIANGLE_COMMENT_LINK_AUD triangle_c0_ where triangle_c0_.REV=? and triangle_c0_.TRIANGLE_ID=? and triangle_c0_.COMMENT_ID=?
DEBUG [org.hibernate.SQL]: select triangleco0_.ID as ID20_0_, triangleco0_.REV as REV20_0_, triangleco0_.REVTYPE as REVTYPE20_0_, triangleco0_.ACCIDENT_PERIOD as ACCIDENT1_29_0_, triangleco0_.DEVELOPMENT_PERIOD as DEVELOPM2_29_0_, triangleco0_.COMMANT_TEXT as COMMANT3_29_0_, triangleco0_.CREATION_DATE as CREATION4_29_0_, triangleco0_.USER_NAME as USER5_29_0_ from JRESERVE.TRIANGLE_COMMENT_AUD triangleco0_ where triangleco0_.ID=? and triangleco0_.REV=?
DEBUG [org.hibernate.SQL]: select triangle_c0_.REV as REV25_0_, triangle_c0_.TRIANGLE_ID as TRIANGLE2_25_0_, triangle_c0_.COMMENT_ID as COMMENT3_25_0_, triangle_c0_.REVTYPE as REVTYPE25_0_ from JRESERVE.TRIANGLE_COMMENT_LINK_AUD triangle_c0_ where triangle_c0_.REV=? and triangle_c0_.TRIANGLE_ID=? and triangle_c0_.COMMENT_ID=?
DEBUG [org.hibernate.SQL]: select triangleco0_.ID as ID20_0_, triangleco0_.REV as REV20_0_, triangleco0_.REVTYPE as REVTYPE20_0_, triangleco0_.ACCIDENT_PERIOD as ACCIDENT1_29_0_, triangleco0_.DEVELOPMENT_PERIOD as DEVELOPM2_29_0_, triangleco0_.COMMANT_TEXT as COMMANT3_29_0_, triangleco0_.CREATION_DATE as CREATION4_29_0_, triangleco0_.USER_NAME as USER5_29_0_ from JRESERVE.TRIANGLE_COMMENT_AUD triangleco0_ where triangleco0_.ID=? and triangleco0_.REV=?
DEBUG [org.hibernate.SQL]: select triangle_c0_.REV as col_0_0_, triangle_c0_.TRIANGLE_ID as col_0_1_, triangle_c0_.COMMENT_ID as col_0_2_, triangleco1_.ID as col_1_0_, triangleco1_.REV as col_1_1_ from JRESERVE.TRIANGLE_COMMENT_LINK_AUD triangle_c0_, JRESERVE.TRIANGLE_COMMENT_AUD triangleco1_ where triangle_c0_.COMMENT_ID=triangleco1_.ID and triangle_c0_.TRIANGLE_ID=? and triangleco1_.REV=(select max(triangleco2_.REV) from JRESERVE.TRIANGLE_COMMENT_AUD triangleco2_ where triangleco2_.REV<=? and triangleco1_.ID=triangleco2_.ID) and triangle_c0_.REV=(select max(triangle_c3_.REV) from JRESERVE.TRIANGLE_COMMENT_LINK_AUD triangle_c3_ where triangle_c3_.REV<=? and triangle_c0_.TRIANGLE_ID=triangle_c3_.TRIANGLE_ID and triangle_c0_.COMMENT_ID=triangle_c3_.COMMENT_ID) and triangle_c0_.REVTYPE<>? and triangleco1_.REVTYPE<>?
DEBUG [org.hibernate.SQL]: select triangle_c0_.REV as REV25_0_, triangle_c0_.TRIANGLE_ID as TRIANGLE2_25_0_, triangle_c0_.COMMENT_ID as COMMENT3_25_0_, triangle_c0_.REVTYPE as REVTYPE25_0_ from JRESERVE.TRIANGLE_COMMENT_LINK_AUD triangle_c0_ where triangle_c0_.REV=? and triangle_c0_.TRIANGLE_ID=? and triangle_c0_.COMMENT_ID=?
DEBUG [org.hibernate.SQL]: select triangleco0_.ID as ID20_0_, triangleco0_.REV as REV20_0_, triangleco0_.REVTYPE as REVTYPE20_0_, triangleco0_.ACCIDENT_PERIOD as ACCIDENT1_29_0_, triangleco0_.DEVELOPMENT_PERIOD as DEVELOPM2_29_0_, triangleco0_.COMMANT_TEXT as COMMANT3_29_0_, triangleco0_.CREATION_DATE as CREATION4_29_0_, triangleco0_.USER_NAME as USER5_29_0_ from JRESERVE.TRIANGLE_COMMENT_AUD triangleco0_ where triangleco0_.ID=? and triangleco0_.REV=?
INFO [org.jreserve.persistence.connection.HibernateUtil]: CLosing SessionFactory...
