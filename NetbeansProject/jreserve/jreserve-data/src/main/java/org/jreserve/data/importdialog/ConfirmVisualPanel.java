package org.jreserve.data.importdialog;

import org.jreserve.data.DataImport.ImportType;
import org.jreserve.data.DataImportWizard;
import org.jreserve.data.DataTable;
import org.jreserve.data.entities.ProjectDataType;
import org.jreserve.project.entities.Project;
import org.jreserve.project.system.ProjectElement;
import org.openide.WizardDescriptor;
import org.openide.util.NbBundle.Messages;

/**
 *
 * @author Peter Decsi
 */
@Messages({
    "LBL.ConfirmVisualPanel.Project=Project:",
    "LBL.ConfirmVisualPanel.ImportMethod=Import method:",
    "LBL.ConfirmVisualPanel.DataType=Data type:",
    "LBL.ConfirmVisualPanel.ValueCount=Values:",
    "LBL.ConfirmVisualPanel.Name=Confirmation",
    "LBL.ConfirmVisualPanel.Cummulated=Cummulated:",
    "LBL.ConfirmVisualPanel.Yes=Yes",
    "LBL.ConfirmVisualPanel.No=No"
})
public class ConfirmVisualPanel extends javax.swing.JPanel {

    public ConfirmVisualPanel() {
        initComponents();
        setName(Bundle.LBL_ConfirmVisualPanel_Name());
    }
    
    void readSettings(WizardDescriptor wizard) {
        readProject(wizard);
        readImportMethod(wizard);
        readDataTable(wizard);
        readCummulated(wizard);
    }

    private void readProject(WizardDescriptor wizard) {
        ProjectElement<Project> element = (ProjectElement<Project>) wizard.getProperty(DataImportWizard.PROJECT_PROPERTY);
        Project project = element==null? null : element.getValue();
        String name = project==null? null : project.getName();
        projectText.setText(name);
    }
    
    private void readImportMethod(WizardDescriptor wizard) {
        ImportType it = (ImportType) wizard.getProperty(DataImportWizard.IMPORT_METHOD_PROPERTY);
        String name = it==null? null : it.getUserName();
        importMethodText.setText(name);
    }
    
    private void readDataTable(WizardDescriptor wizard) {
        DataTable table = (DataTable) wizard.getProperty(DataImportWizard.DATA_TABLE_PROPERTY);
        setTableData(table);
    }
    
    private void setTableData(DataTable table) {
        setDataType(table==null? null : table.getDataType());
        int count = table==null? 0 : table.getDataCount();
        valueCountText.setText(""+count);
    }
    
    private void setDataType(ProjectDataType dt) {
        if(dt == null) {
            dataTypeText.setText(null);
        } else {
            String name = String.format("%d - %s", dt.getDbId(), dt.getName());
            dataTypeText.setText(name);
        }
    }
    
    private void readCummulated(WizardDescriptor wizard) {
        Boolean cummulated = (Boolean) wizard.getProperty(DataImportWizard.CUMMULATED_PROPERTY);
        if(cummulated == null || !cummulated) {
            cummulatedText.setText(Bundle.LBL_ConfirmVisualPanel_No());
        } else {
            cummulatedText.setText(Bundle.LBL_ConfirmVisualPanel_Yes());
        }
    }
    
    void showProgressBar() {
        pBar.setIndeterminate(true);
        pBar.setVisible(true);
    }
    
    void hideProgressBar() {
        pBar.setVisible(false);
        pBar.setIndeterminate(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        projectLabel = new javax.swing.JLabel();
        importMethodLabel = new javax.swing.JLabel();
        dataTypeLabel = new javax.swing.JLabel();
        valueCountLabel = new javax.swing.JLabel();
        cummulatedLabel = new javax.swing.JLabel();
        projectText = new javax.swing.JLabel();
        importMethodText = new javax.swing.JLabel();
        dataTypeText = new javax.swing.JLabel();
        valueCountText = new javax.swing.JLabel();
        cummulatedText = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        pBarPanel = new javax.swing.JPanel();
        pBar = new javax.swing.JProgressBar();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));
        setLayout(new java.awt.GridBagLayout());

        projectLabel.setText(Bundle.LBL_ConfirmVisualPanel_Project());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(projectLabel, gridBagConstraints);

        importMethodLabel.setText(Bundle.LBL_ConfirmVisualPanel_ImportMethod());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(importMethodLabel, gridBagConstraints);

        dataTypeLabel.setText(Bundle.LBL_ConfirmVisualPanel_DataType());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(dataTypeLabel, gridBagConstraints);

        valueCountLabel.setText(Bundle.LBL_ConfirmVisualPanel_ValueCount());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(valueCountLabel, gridBagConstraints);

        cummulatedLabel.setText(Bundle.LBL_ConfirmVisualPanel_Cummulated());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(cummulatedLabel, gridBagConstraints);

        projectText.setText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(projectText, gridBagConstraints);

        importMethodText.setText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(importMethodText, gridBagConstraints);

        dataTypeText.setText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(dataTypeText, gridBagConstraints);

        valueCountText.setText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(valueCountText, gridBagConstraints);

        cummulatedText.setText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(cummulatedText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(filler1, gridBagConstraints);

        pBarPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));
        pBarPanel.add(pBar);
        pBar.setVisible(false);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(pBarPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cummulatedLabel;
    private javax.swing.JLabel cummulatedText;
    private javax.swing.JLabel dataTypeLabel;
    private javax.swing.JLabel dataTypeText;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel importMethodLabel;
    private javax.swing.JLabel importMethodText;
    private javax.swing.JProgressBar pBar;
    private javax.swing.JPanel pBarPanel;
    private javax.swing.JLabel projectLabel;
    private javax.swing.JLabel projectText;
    private javax.swing.JLabel valueCountLabel;
    private javax.swing.JLabel valueCountText;
    // End of variables declaration//GEN-END:variables
}
