/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jreserve.project.entities.project;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

@ConvertAsProperties(
    dtd = "-//org.jreserve.project.entities.project//ProjectEditor//EN",
    autostore = false
)
@TopComponent.Description(
    preferredID = "ProjectEditorTopComponent",
    iconBase = "resources/project.png",
    persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(
    mode = "editor", 
    openAtStartup = false
)
@ActionID(
    category = "Window", 
    id = "org.jreserve.project.entities.project.ProjectEditorTopComponent"
)
//@ActionReference(path = "Menu/Window" /*
// * , position = 333
// */)
//@TopComponent.OpenActionRegistration(displayName = "#CTL_ProjectEditorAction",
//preferredID = "ProjectEditorTopComponent")
@Messages({
    "CTL_ProjectEditorAction=ProjectEditor",
    "CTL_ProjectEditorTopComponent=ProjectEditor Window"
})
public final class ProjectEditorTopComponent extends TopComponent {
    
    private ProjectElement element;
    
    public ProjectEditorTopComponent() {
        initComponents();
        setName(Bundle.CTL_ProjectEditorTopComponent());
    }

    public ProjectEditorTopComponent(ProjectElement element) {
        initComponents();
        this.element = element;
        initProjectElement(element);
    }
    
    private void initProjectElement(ProjectElement element) {
        associateLookup(element.getLookup());
        setDisplayName(getProjectName());
    } 
    
    private String getProjectName() {
        return (String) element.getProperty(org.jreserve.project.system.ProjectElement.NAME_PROPERTY);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
