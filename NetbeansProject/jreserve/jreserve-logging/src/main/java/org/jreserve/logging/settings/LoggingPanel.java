package org.jreserve.logging.settings;

import java.util.prefs.Preferences;
import javax.swing.JComboBox;
import org.jreserve.logging.Logger;
import org.jreserve.logging.view.LogviewTopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.NbPreferences;

@Messages({
    "LBL_level=Level:",
    "LBL_showLog=Show log:"
})
final class LoggingPanel extends javax.swing.JPanel {

    private final static String LEVEL_KEY = "logging.level";
    final static String SHOW_LOG_KEY = "logging.showlog";
    private final static Logger.Level DEFAULT_LEVEL = Logger.Level.ERROR;
    
    private final LoggingOptionsPanelController controller;

    LoggingPanel(LoggingOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        levelLabel = new javax.swing.JLabel();
        levelCombo = new JComboBox();
        showLogLabel = new javax.swing.JLabel();
        showLogCheck = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(levelLabel, Bundle.LBL_level());

        levelCombo.setModel(new javax.swing.DefaultComboBoxModel(Logger.Level.values()));
        levelCombo.setRenderer(new LevelRenderer());

        org.openide.awt.Mnemonics.setLocalizedText(showLogLabel, Bundle.LBL_showLog());

        org.openide.awt.Mnemonics.setLocalizedText(showLogCheck, org.openide.util.NbBundle.getMessage(LoggingPanel.class, "LoggingPanel.showLogCheck.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showLogLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(levelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(levelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showLogCheck))
                .addContainerGap(148, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(levelLabel)
                    .addComponent(levelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showLogCheck)
                    .addComponent(showLogLabel))
                .addContainerGap(159, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        Preferences prefs = NbPreferences.forModule(LoggingPanel.class);
        levelCombo.setSelectedItem(getLevel(prefs));
        showLogCheck.setSelected(prefs.getBoolean(SHOW_LOG_KEY, false));
    }

    static Logger.Level getLevel(Preferences prefs) {
        String name = prefs.get(LEVEL_KEY, DEFAULT_LEVEL.name());
        for(Logger.Level level : Logger.Level.values())
            if(level.name().equals(name))
                return level;
        return null;
    }
    
    void store() {
        Preferences prefs = NbPreferences.forModule(LoggingPanel.class);
        storeLevel(prefs);
        storeShowLog(prefs);
    }

    private void storeLevel(Preferences prefs) {
        Logger.Level level = getSelectedLevel();
        LoggingSetting.setLevel(level);
        prefs.put(LEVEL_KEY, level.name());
    }
    
    private Logger.Level getSelectedLevel() {
        Logger.Level level = (Logger.Level) levelCombo.getSelectedItem();
        return level != null? level : DEFAULT_LEVEL;
    }
    
    private void storeShowLog(Preferences prefs) {
        boolean show = showLogCheck.isSelected();
        setGuiAppender(show);
        LogviewTopComponent.setViewVisible(show);
        prefs.putBoolean(SHOW_LOG_KEY, show);
    }
    
    private void setGuiAppender(boolean show) {
        if(show)
            LoggingSetting.appendGuiAppender();
        else
            LoggingSetting.deleteGuiAppender();
    }
    
    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox levelCombo;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JCheckBox showLogCheck;
    private javax.swing.JLabel showLogLabel;
    // End of variables declaration//GEN-END:variables
}
