/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jreserve.oracledatabase.opendialog;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JPanel;
import org.jreserve.branding.img.Images;
import org.jreserve.oracledatabase.OracleDatabase;
import org.openide.util.NbBundle.Messages;

@Messages({
    "CTL_stepOne=Select database",
    "CTL_dbLabel=Database:",
    "ERR_dbNotSelected=Database not selected!"
})
final class OpenDialogVisualPanel1 extends JPanel {
    
    
    private ActionListener comboListener = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            checkCombo();
        }
    };
    
    private OpenDialogWizardPanel1 descriptor;
    
    /**
     * Creates new form OpenDialogVisualPanel1
     */
    public OpenDialogVisualPanel1(OpenDialogWizardPanel1 descriptor) {
        this.descriptor = descriptor;
        initComponents();
        checkCombo();
    }

    @Override
    public String getName() {
        return Bundle.CTL_stepOne();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        dbCombo = new javax.swing.JComboBox<OracleDatabase>();
        errorLabel = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, Bundle.CTL_dbLabel());

        dbCombo.setModel(new OracleDbComboModel());
        dbCombo.addActionListener(comboListener);
        dbCombo.setRenderer(new OracleDbRenderer());

        org.openide.awt.Mnemonics.setLocalizedText(errorLabel, Bundle.ERR_dbNotSelected());
        errorLabel.setIcon(Images.ERROR);
        errorLabel.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameLabel)
                        .addGap(18, 18, 18)
                        .addComponent(dbCombo, 0, 296, Short.MAX_VALUE))
                    .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(dbCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, Short.MAX_VALUE)
                .addComponent(errorLabel)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<OracleDatabase> dbCombo;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables

    private void checkCombo() {
        OracleDatabase db = (OracleDatabase) dbCombo.getSelectedItem();
        boolean isValid = (db != null);
        errorLabel.setVisible(!isValid);
        descriptor.setValid(isValid);
    }
    
    OracleDatabase getDatabase() {
        return (OracleDatabase) dbCombo.getSelectedItem();
    }
    
    void setDatabase(OracleDatabase db) {
        dbCombo.setSelectedItem(db);
    }
}
