/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jreserve.dbexplorer;

import org.jreserve.database.api.DatabaseProvider;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Node;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.nbtest.dbexplorer//DbExplorer//EN",
autostore = false)
@TopComponent.Description(preferredID = "DbExplorerTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.nbtest.dbexplorer.DbExplorerTopComponent")
@ActionReference(path = "Menu/Window" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_DbExplorerAction",
preferredID = "DbExplorerTopComponent")
@Messages({
    "CTL_DbExplorerAction=Databases Explorer",
    "CTL_DbExplorerTopComponent=Databases",
    "HINT_DbExplorerTopComponent=Manage databases"
})
public final class DbExplorerTopComponent extends TopComponent implements ExplorerManager.Provider {
    
    private final static ExplorerManager mgr = new ExplorerManager();
    //private final static DbNodeFactory childFactory = new DbNodeFactory();
    
    public static void refreshNodes(DatabaseProvider provider) {
        DbProviderNode node = getNodeForProvider(provider);
        node.refresh();
    }
    
    private static DbProviderNode getNodeForProvider(DatabaseProvider provider) {
        for(Node node : mgr.getRootContext().getChildren().getNodes()) {
            DatabaseProvider nodeProvider = node.getLookup().lookup(DatabaseProvider.class);
            if(provider.getClass() == nodeProvider.getClass())
                return (DbProviderNode) node;
        }
        return null;
    }
    
    public DbExplorerTopComponent() {
        initComponents();
        setName(Bundle.CTL_DbExplorerTopComponent());
        setToolTipText(Bundle.HINT_DbExplorerTopComponent());
        treeView.setRootVisible(false);
        //mgr.setRootContext(new AbstractNode(Children.create(new DbProviderNodeFactory(), true)));
        mgr.setRootContext(new AbstractNode(new DbProviderChildren()));
        associateLookup(ExplorerUtils.createLookup(mgr, getActionMap()));
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return mgr;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        treeView = new org.openide.explorer.view.BeanTreeView();

        setLayout(new java.awt.BorderLayout());
        add(treeView, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.view.BeanTreeView treeView;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
